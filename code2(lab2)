#include <iostream>
#include <time.h>
#include <stdlib.h>
void shell(int* array, int size) {
	for (int s = size / 2; s > 0; s /= 2) {
		for (int i = s; i < size; ++i) {
			for (int j = i - s; j >= 0 && array[j] > array[j + s]; j -= s) {
				int temp = array[j];
				array[j] = array[j + s];
				array[j + s] = temp;
			}
		}
	}
}

void qs(int* items, int left, int right)
{
	int i, j;
	int x, y;

	i = left; j = right;
	x = items[(left + right) / 2];
	do {
		while ((items[i] < x) && (i < right)) i++;
		while ((x < items[j]) && (j > left)) j--;

		if (i <= j) {
			y = items[i];
			items[i] = items[j];
			items[j] = y;
			i++; j--;
		}
	} while (i <= j);

	if (left < j) qs(items, left, j);
	if (i < right) qs(items, i, right);
}

int compare(const void* x1, const void* x2)
{
	return (*(int*)x1 - *(int*)x2);
}

int main()
{
	system("chcp 1251");
	int col , k=0;
	printf("введите размер: ");
	scanf_s("%d", &col);
	int* mass = (int*)malloc(col * sizeof(int));
	for (int i = 0; i < col; i++)
	{
		if (i != k) {
			k = col / 2;
			mass[i] = i;
		}
		mass[i] = col - i;
	}
	clock_t start = clock();
	shell(mass, col);
	clock_t end = clock();
	double ts = (double)(end - start) / CLOCKS_PER_SEC;
	printf("\nЗатрачено времени(shell): %f\n", ts);
	for (int i = 0; i < col; i++)
	{
		if (i != k) {
			k = col / 2;
			mass[i] = i;
		}
		//mass[i] = rand() % 1000;
        //mass[i] = i;
		mass[i] = col- i;
	}
	start = clock();
	qs(mass, 0, col - 1);
	end = clock();
	ts = (double)(end - start) / CLOCKS_PER_SEC;
	printf("\nЗатрачено времени(qs): %f\n", ts);
	for (int i = 0; i < col; i++)
	{
		if (i != k) {
			k = col / 2;
			mass[i] = i;
		}
		mass[i] = col - i;
	}
	start = clock();
	qsort(mass, col, sizeof(int), compare);
	end = clock();
	ts = (double)(end - start) / CLOCKS_PER_SEC;
	printf("\nЗатрачено времени(qsort): %f\n", ts);
}
